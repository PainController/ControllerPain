//
//  CDDoctorViewController.swift
//  ControlaDor
//
//  Created by Isaías Lima on 15/03/16.
//  Copyright (c) 2016 PainController. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CDDoctorViewControllerInput
{
  func displaySomething(viewModel: CDDoctorViewModel)
  func reloadTableView()
}

protocol CDDoctorViewControllerOutput
{
  func makeFecthRequest(request: CDDoctorRequest)
  func deleteConsult(request: CDConsultDeleteRequest, completionHandler: (success: Bool) -> Void)
}

class CDDoctorViewController: UITableViewController, CDDoctorViewControllerInput
{
    var output: CDDoctorViewControllerOutput!
    var router: CDDoctorRouter!
  
    // MARK: Object lifecycle
  
    override func awakeFromNib()
    {
        super.awakeFromNib()
        CDDoctorConfigurator.sharedInstance.configure(self)
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomethingOnLoad()
    }
  
    // MARK: Event handling

    func doSomethingOnLoad()
    {
    // NOTE: Ask the Interactor to do some work
    
        let request = CDDoctorRequest()
        output.makeFecthRequest(request)
    }
  
    // MARK: Display logic
  
    func displaySomething(viewModel: CDDoctorViewModel)
    {
        let count = viewModel.contacts.count
        consults = [CDConsult]()

        for i in 0..<count {
            var consult = CDConsult()
            consult.contact = viewModel.contacts[i]
            consult.images = viewModel.images[i]
            consult.results = viewModel.results[i]
            consults.append(consult)
        }
    }

    // MARK: Properties

    let reuseIdentifier = "Consult"
    var consults: [CDConsult]!

    // MARK: DataSource and Delegate

    func reloadTableView() {
        doSomethingOnLoad()
        tableView.reloadData()
    }

    override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return consults.count
    }

    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCellWithIdentifier(reuseIdentifier)

        let consult = consults[indexPath.row]
        let dateFormatter = NSDateFormatter()
        dateFormatter.dateFormat = "dd/MM/yy"

        cell?.textLabel?.text = consult.contact.name
        cell?.detailTextLabel?.text = dateFormatter.stringFromDate(consult.contact.date)

        return cell!
    }

    override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
        return true
    }

    override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
        if editingStyle == .Delete {
            let alertController = UIAlertController(title: "Quer deletar essa consulta?", message: "Prossiga se já tiver entrado em contato com seu paciente", preferredStyle: .ActionSheet)

            let delete = UIAlertAction(title: "Sim", style: .Destructive, handler: { (action) -> Void in
                let consult = self.consults[indexPath.row]
                let request = CDConsultDeleteRequest(entityData: consult)
                self.output.deleteConsult(request, completionHandler: { (success) -> Void in
                    if success {
                        self.reloadTableView()
                    } else {
                        // tratar
                    }
                })
            })

            let cancel = UIAlertAction(title: "Cancelar", style: .Cancel, handler: nil)

            alertController.addAction(delete)
            alertController.addAction(cancel)

            self.presentViewController(alertController, animated: true, completion: nil)
        }
    }
}
