//
//  CDPainDataInteractor.swift
//  ControlaDor
//
//  Created by IsaÃ­as Lima on 09/03/16.
//  Copyright (c) 2016 PainController. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CDPainDataInteractorInput
{
  func fetchRequest(request: CDPainDataRequest)
  func createPainDatum(request: CDPainDatumRequest)
  func deletePainDatum(request: CDPainDatumDeleteRequest, completionHandler: (success: Bool) -> Void)
}

protocol CDPainDataInteractorOutput
{
  func presentEntities(response: CDPainDataResponse)
  func reloadTableView()
}

class CDPainDataInteractor: CDPainDataInteractorInput
{
  var output: CDPainDataInteractorOutput!
  var worker: CDPersistentStoreWorker!
  var persistentWorker: CDPainDataWorker!
  var lastUpdateEntities: [CDPainDatum]!
  
  // MARK: Business logic
  
  func fetchRequest(request: CDPainDataRequest)
  {
    // NOTE: Create some Worker to do the work
    
    worker = CDPersistentStoreWorker(entityName: request.entityName)

    do {
        try worker.makeFetchRequest({ (entities) -> Void in
            self.lastUpdateEntities = entities
            let response = CDPainDataResponse(painEntity: entities)
            self.output.presentEntities(response)
        })
    } catch {
        print(error)
    }
  }

  func createPainDatum(request: CDPainDatumRequest)
  {
    persistentWorker = CDPainDataWorker(request: request)
    persistentWorker.createPainDatum { (success) -> Void in
        if success {
            self.output.reloadTableView()
        } else {
            // tratar
        }
    }
  }

  func deletePainDatum(request: CDPainDatumDeleteRequest, completionHandler: (success: Bool) -> Void) {

    persistentWorker = CDPainDataWorker(request: request)

    for entity in lastUpdateEntities {
        if entity.date == request.date {
            self.persistentWorker.deletePainDatum(entity, completionHandler: { (success) -> Void in
                if success {
                    completionHandler(success: true)
                    self.output.reloadTableView()
                } else {
                    completionHandler(success: false)
                    // tratar
                }
            })
        }
    }
  }
}
